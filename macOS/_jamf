#compdef jamf

# The MIT License (MIT)
#
# Copyright (c) 2025 Shohei YOSHIDA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# ------------------------------------------------------------------------------
# Description
# -----------
#
#  Completion script for jamf  (https://www.jamf.com/)
#
# ------------------------------------------------------------------------------

_jamf() {
  local ret=1

  _arguments \
    '-displayJSSTraffic[Displays the total network traffic between the jamf binary and the JSS]' \
    '-randomDelaySeconds[Delays a random amount of time before starting]' \
    '-showPID[Prints the PID of the process]' \
    '-stopConsoleLogs[Stops logs from being sent to the console]' \
    '-verbose[Shows verbose events]' \
    '1: :_jamf_commands' && ret=0

  return ret
}

(( $+functions[_jamf_commands] )) ||
_jamf_commands() {
  local -a commands=(
    "about:Displays information about the jamf binary"
    "bind:Binds this computer to a directory service"
    "bless:Blesses a System or a NetBoot Server"
    "changePassword:Changes a local user's password"
    "checkJSSConnection:Checks the availability of the JSS"
    "createAccount:Creates a new local account on the system"
    "createConf:Creates a configuration file that the jamf binary uses to find the JSS"
    "createSetupDone:Ensures the Setup Assistant does not launch immediately on the next boot"
    "createStartupItem:Creates a startup script to contact the JSS"
    "deleteAccount:Deletes a local account from NetInfo or the local dscl database"
    "deletePrinter:Deletes a printer from the system"
    "deleteSetupDone:Causes the Setup Assistant to launch on the next boot"
    "displayMessage:Displays a message to the current user"
    "enablePermissions:Enables permissions on a volume"
    "enroll:Enrolls this computer with the JSS"
    "fixByHostFiles:Fixes the ByHost files"
    "fixDocks:Repairs docks that have question marks after certain OS Updates"
    "flushCaches:Flush cache files for the system and/or users"
    "flushPolicyHistory:Flush the policy history on the JSS"
    "getARDFields:Displays the ARD Fields on a volume"
    "getComputerName:Displays the computer name on a volume"
    "help:Displays this message or details on a specific verb"
    "launchSelfService:Opens the Self Service app"
    "listUsers:Lists all the users on the computer"
    "log:Log the IP address, action, and username to the JSS"
    "manage:Enforces the entire management framework from the JSS"
    "mapPrinter:Maps a printer"
    "modifyDock:Installs or removes items in all users docks"
    "mount:Mounts a file share"
    "policy:Checks for policies on the JSS"
    "reboot:Reboots the computer"
    "recon:Runs Recon to update the inventory in the JSS"
    "removeFramework:Removes the JAMF Binary and associated files from the computer"
    "removeSWUSettings:Remove settings that point SWU at internal servers"
    "renewDeviceCert:Renews the existing management framework device certificate"
    "resetPassword:Resets a local user account password"
    "runSoftwareUpdate:Run Software Update"
    "setARDFields:Sets the ARD Fields"
    "setComputerName:Sets the computer name"
    "setHomePage:Sets the default home page for users"
    "setOFP:Sets the Open Firmware mode and password"
    "startSSH:Starts the ssh server"
    "startup:Checks the connection to the Jamf Pro server and triggers startup actions as defined in Jamf Pro"
    "uninstall:Uninstalls a package"
    "unmountServer:Unmounts a file server"
    "updatePrebindings:Updates the prebindings on a volume"
    "version:Prints the version of this application"
  )

  _describe -t 'commands' "commands" commands
}

_jamf "$@"

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
